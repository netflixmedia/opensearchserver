<?
// $Id$
/**
 * @author Bruno Massa http://drupal.org/user/67164
 * @file
 * Control a OpenX server from distance.
 */

/**
 * The main interface with the OpenX API
 *
 * @param $op
 *   String. The operation to be done
 * @param ...
 *   Any. Any needed data to execute the API operation.
 */
function _openx_manager_api($op) {
  module_load_include('api.inc', 'openx_manager');
  $args = func_get_args();
  return call_user_func_array('_openx_manager_call', $args);
}

/**
 * Implementation of hook_exit().
 */
function openx_manager_exit() {
  // Close the connextion with OpenX server, if opened.
  if (_openx_manager_session(TRUE)) {
    xmlrpc(
      'http://'. variable_get('openx_manager_server', '') .'/www/api/v1/xmlrpc/LogonXmlRpcService.php',
      'logoff',
      _openx_manager_session()
    );
  }
}

/**
 * Implementation of hook_link().
 */
function openx_manager_link($type, $object, $teaser = FALSE) {
  if ($type == 'node' and empty($teaser)) {
    if ($object->type == 'openx_advertiser') {
      $links['create_campaign'] = array(
        'title'       => t('Create a new Campaign'),
        'href'        => 'node/add/openx-campaign',
        'query'       => array('aid' => $object->aid, 'nid' => $object->nid),
      );
      return $links;
    }
    elseif ($object->type == 'openx_campaign') {
      $links['create_banner'] = array(
        'title'       => t('Create a new Banner'),
        'href'        => 'node/add/openx-banner',
        'query'       => array('cid' => $object->aid, 'nid' => $object->nid),
      );
      return $links;
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function openx_manager_menu() {
  $items['admin/settings/openx-manager'] = array(
    'access arguments'  => array('administer a OpenX server'),
    'description'       => 'Control a OpenX server from here',
    'file'              => 'openx_manager.settings.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_manager_settings'),
    'title'             => 'OpenX manager',
  );
  return $items;
}

/**
 * Implementation of hook_node_info().
 */
function openx_manager_node_info() {
  return array(
    'openx_advertiser' => array(
      'description' => t(''),
      'has_body'    => FALSE,
      'name'        => t('Advertiser'),
      'module'      => 'openx_node_advertiser',
    ),
    'openx_campaign' => array(
      'description' => t(''),
      'has_body'    => FALSE,
      'module'      => 'openx_node_campaign',
      'name'        => t('Campaign'),
    ),
    'openx_banner' => array(
      'description' => t(''),
      'has_body'    => FALSE,
      'module'      => 'openx_node_banner',
      'name'        => t('Banner'),
    ),
  );
}

/**
 * Ask, if not already, a new session ID from OpenX
 *
 * @param $check_only
 *   Boolean. TRUE if its only to check if the session was already opened.
 * @return
 *   String. The full session ID, used on every further communication.
 */
function _openx_manager_session($check_only = FALSE) {
  static $session_id;
  if (!$check_only and !$session_id) {
    $session_id = xmlrpc(
      'http://'. variable_get('openx_manager_server', '') .'/www/api/v1/xmlrpc/LogonXmlRpcService.php',
      'logon',
      variable_get('openx_manager_username', ''),
      variable_get('openx_manager_password', '')
    );
  }
  return $session_id;
}

/**
 * Implementation of hook_theme().
 */
function openx_manager_theme() {
  return array(
    'advertiser' => array(
      'file'      => 'openx_manager.advertiser.inc',
      'arguments' => array('node'),
    ),
    'banner' => array(
      'file'      => 'openx_manager.banner.inc',
      'arguments' => array('node'),
    ),
    'campaign' => array(
      'file'      => 'openx_manager.campaign.inc',
      'arguments' => array('node'),
    ),
  );
}

/**
 * Implementation of hook_delete().
 *
 * For Advertisers
 */
function openx_node_advertiser_delete(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Advertisers
 */
function openx_node_advertiser_form(&$node, $form_state) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Advertisers
 */
function openx_node_advertiser_insert(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Advertisers
 */
function openx_node_advertiser_load(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Advertisers
 */
function openx_node_advertiser_update(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Advertisers
 */
function openx_node_advertiser_validate(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_advertiser_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_view($node, $teaser, $page);
}

/**
 * Implementation of hook_delete().
 *
 * For Banners
 */
function openx_node_banner_delete(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Banners
 */
function openx_node_banner_form(&$node, $form_state) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Banners
 */
function openx_node_banner_insert(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Banners
 */
function openx_node_banner_load(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Banners
 */
function openx_node_banner_update(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Banners
 */
function openx_node_banner_validate(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_banner_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_view($node, $teaser, $page);
}

/**
 * Implementation of hook_delete().
 *
 * For Campaigns
 */
function openx_node_campaign_delete(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Campaigns
 */
function openx_node_campaign_form(&$node, $form_state) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Campaigns
 */
function openx_node_campaign_insert(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Campaigns
 */
function openx_node_campaign_load(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Campaigns
 */
function openx_node_campaign_update(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Campaigns
 */
function openx_node_campaign_validate(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_campaign_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_view($node, $teaser, $page);
}
